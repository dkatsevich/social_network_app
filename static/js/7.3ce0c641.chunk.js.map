{"version":3,"sources":["components/utils/validation.js","components/formControls/formControls.js","components/login/login.jsx"],"names":["mustRequire","value","undefined","maxLengthCreator","max","length","withFormValidate","Tag","props","input","meta","touched","error","restProps","hasError","className","Input","maxLength150","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","name","placeholder","component","type","validate","actions","loginMeThunk","compose","withRouter","connect","isAuth","authReducer","to","formData"],"mappings":"0HAAA,wEAAMA,EAAc,SAAAC,GAAK,OAAKA,OAAQC,EAAY,kBAE5CC,EAAmB,SAAAC,GAAG,OAAI,SAAAH,GAAK,OAChCA,GAASA,EAAMI,OAASD,EAAxB,mCAA0DA,EAA1D,iBAA0EF,K,+HCAzEI,EAAmB,SAACC,GAAD,OAAS,SAACC,GAC/B,IAAOC,EAA+CD,EAA/CC,MAAP,EAAsDD,EAAxCE,KAAOC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,MAAWC,EAAzC,YAAsDL,EAAtD,GACMM,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWD,EAAW,kBAAoB,GAA/C,UACI,cAACP,EAAD,2BAASE,GAAWI,IACnBC,EAAW,sBAAMC,UAAU,SAAhB,SAA0BH,IAAgB,UAK5DI,EAAQV,EAAiB,SACdA,EAAiB,a,6ECflC,mGA2BMW,EAAed,YAAiB,KAsChCe,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAnCL,SAAAX,GACd,OACI,uBAAMO,UAAU,cAAcM,SAAUb,EAAMc,aAA9C,UACI,qBAAKP,UAAU,eAAf,SACI,cAAC,IAAD,CAAOQ,KAAK,QACLC,YAAa,QACbC,UAAWT,IACXU,KAAK,OACLC,SAAU,CAAC3B,IAAaiB,OAGnC,qBAAKF,UAAU,eAAf,SACI,cAAC,IAAD,CAAOQ,KAAK,WACLC,YAAa,WACbC,UAAWT,IACXU,KAAK,OACLC,SAAU,CAAC3B,IAAaiB,OAGnC,wBAAOF,UAAU,kBAAjB,UACI,cAAC,IAAD,CAAOQ,KAAK,aAAaE,UAAU,QAAQC,KAAK,aAChD,kDAEJ,qBAAKX,UAAU,aAAf,SACI,8CAGAP,EAAMI,OAEN,qBAAKG,UAAU,eAAf,SAA8B,+BAAOP,EAAMI,gBAWrDgB,EAAU,CACZC,kBAGWC,sBACXC,IACAC,aAPS,SAAC,GAAD,MAA8B,CAACC,OAA/B,EAAEC,YAAcD,UAOXL,GAFHE,EAhED,SAAC,GAA4B,IAA3BD,EAA0B,EAA1BA,aAKZ,OALsC,EAAZI,OAMf,cAAC,IAAD,CAAUE,GAAG,aAIpB,sBAAKpB,UAAU,QAAf,UACI,qBAAKA,UAAU,eAAf,wBACA,cAACG,EAAD,CAAgBG,SAXP,SAACe,GACdP,EAAaO","file":"static/js/7.3ce0c641.chunk.js","sourcesContent":["const mustRequire = value => (value ? undefined : 'It is required');\r\n\r\nconst maxLengthCreator = max => value =>\r\n    (value && value.length > max ? `String must be less than ${max} symbols` : undefined)\r\n\r\n\r\nexport {\r\n    mustRequire,\r\n    maxLengthCreator,\r\n}","import React from \"react\";\r\nimport './formControls.scss'\r\n\r\nconst withFormValidate = (Tag) => (props) => {\r\n    const {input, meta: {touched, error}, ...restProps} = props;\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={hasError ? '_validate_error' : \"\"}>\r\n            <Tag {...input} {...restProps}/>\r\n            {hasError ? <span className='_error'>{error}</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Input = withFormValidate('input');\r\nconst Textarea = withFormValidate('textarea');\r\n\r\nexport {\r\n    Input,\r\n    Textarea\r\n}","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {maxLengthCreator, mustRequire} from \"../utils/validation\";\r\nimport {Input} from \"../formControls/formControls\";\r\nimport './login.scss'\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {loginMeThunk} from \"../../redux/reducers/authReducer\";\r\n\r\nconst Login = ({loginMeThunk, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        loginMeThunk(formData);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login__title'>Login page</div>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength150 = maxLengthCreator(150)\r\n\r\n\r\nconst LoginForm = props => {\r\n    return (\r\n        <form className='login__form' onSubmit={props.handleSubmit}>\r\n            <div className='login__input'>\r\n                <Field name=\"email\"\r\n                       placeholder={'Login'}\r\n                       component={Input}\r\n                       type=\"text\"\r\n                       validate={[mustRequire, maxLength150]}\r\n                />\r\n            </div>\r\n            <div className='login__input'>\r\n                <Field name=\"password\"\r\n                       placeholder={'Password'}\r\n                       component={Input}\r\n                       type=\"text\"\r\n                       validate={[mustRequire, maxLength150]}\r\n                />\r\n            </div>\r\n            <label className='login__checkbox'>\r\n                <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n                <span>Remember me</span>\r\n            </label>\r\n            <div className='login__btn'>\r\n                <button>Submit</button>\r\n            </div>\r\n            {\r\n                props.error\r\n                &&\r\n                <div className=\"login__error\"><span>{props.error}</span></div>\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst mstp = ({authReducer: {isAuth}}) => ({isAuth})\r\nconst actions = {\r\n    loginMeThunk\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mstp, actions)\r\n)(Login);"],"sourceRoot":""}